{"version":3,"sources":["Redux/types.js","Redux/userReducer.js","Redux/store.js","Redux/setAuth.js","Redux/useraction.js","Components/LoginPage/LoginPage.js","Components/SignUp.js","Components/Navbar/Navbar.js","Components/UserProfile/UserProfile.js","Components/ProtectedRoute.js","Components/Task/AddTask/AddTask.js","Components/Task/TaskCard/TaskCard.js","Components/Task/TaskColumn/TaskColumn.js","Components/Task/TaskList/TaskList.js","Components/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","SET_CURRENT_USER","ADD_TASK","EDIT_TASK","DELETE_TASK","LOGOUT_USER","GET_TASK_BY_ID","UPDATE_USER","GET_TASKS","GET_FILTER_TASKS","GET_USER_BY_ID","POP_UP_MESSAGE","initialState","isLoggedIn","userDetails","taskData","taskLoading","tasksLoading","tasks","popMessage","userReducer","state","arguments","length","undefined","action","type","payload","localStorage","setItem","user","task","find","id","map","filter","sortedTask","sort","a","b","likes","comment","views","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","setAuthToken","token","axios","defaults","headers","common","logoutUser","dispatch","removeItem","window","location","href","editTask","OPTIONS","url","method","data","then","res","catch","err","console","log","getUserById","connect","loginUser","username","password","email","tokens","access","setAuthenticationToken","props","navigate","useNavigate","setUsername","useState","setPassword","useGoogleOneTapLogin","onSuccess","credentialResponse","onError","_jsxs","children","_jsx","GoogleLogin","useOneTap","class","src","alt","placeholder","value","onChange","e","target","onClick","handleLogin","alert","Link","to","signupUser","name","status","code","formData","setFormData","handleSubmit","userName","userAvatar","avatar","className","updateUser","activeTab","setActiveTab","useEffect","handleTabClick","tabIndex","Array","_","index","avatarNumber","handleAvatarChange","ProtectedRoute","_ref","useSelector","useLocation","Navigate","from","replace","addTask","response","message","getTaskById","useParams","modal","setModal","setTaskData","title","description","user_id","dueDate","priority","style","display","updatedTask","newTask","require","deleteTask","isDragging","drag","useDrag","item","collect","monitor","ref","opacity","split","createdAt","TaskColumn","moveTask","isOver","drop","useDrop","accept","toUpperCase","TaskCard","getTasks","results","taskId","newStatus","DndProvider","backend","HTML5Backend","setPopMessage","toast","getItem","jwt","decode","sub","fetchData","ToastContainer","Navbar","Routes","Route","path","element","SignUp","LoginPage","TaskList","AddTask","UserProfile","App","Provider","BrowserRouter","GoogleOAuthProvider","clientId","MainPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.1e10137d.chunk.js","sourcesContent":["export const SIGNUP_ADMIN = \"SIGNUP_ADMIN\";\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const EDIT_TASK = \"EDIT_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const GET_TASK_BY_ID='GET_TASK_BY_ID';\nexport const UPDATE_USER='UPDATE_USER';\nexport const GET_TASKS='GET_TASKS';\nexport const GET_USER_TASKS='GET_USER_TASKS';\nexport const GET_USER_LISTS='GET_USER_LISTS';\nexport const GET_LIST = \"GET_LIST\";\nexport const GET_FILTER_TASKS = \"GET_FILTER_TASKS\";\nexport const SORT_TASKS = \"SORT_TASKS\";\nexport const GET_USER_BY_ID = \"GET_USER_BY_ID\";\nexport const POST_TYPE = \"POST_TYPE\";\nexport const POP_UP_MESSAGE = 'POP_UP_MESSAGE';","import {\n  ADD_TASK,\n  DELETE_TASK,\n  LOGIN_USER,\n  SET_CURRENT_USER,\n  LOGOUT_USER,\n  GET_TASK_BY_ID,\n  UPDATE_USER,\n  GET_USER_BY_ID,\n  EDIT_TASK,\n  GET_FILTER_TASKS,\n  GET_TASKS,\n  GET_USER_TASKS,\n  SORT_TASKS,\n  POP_UP_MESSAGE\n} from './types'\nconst initialState = {\n  isLoggedIn: false,\n  userDetails: {},\n  taskData: {},\n  taskLoading: true,\n  tasksLoading: true,\n  tasks: [],\n  popMessage:''\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case GET_USER_BY_ID:\n      return {\n        ...state,\n        userDetails: action.payload,\n        isLoggedIn: true\n      }\n    case LOGIN_USER:\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn\n      }\n      case POP_UP_MESSAGE:\n        return {\n          ...state,\n          popMessage: action.payload\n        }\n    case SET_CURRENT_USER:\n      localStorage.setItem('user', action.payload)\n      return {\n        ...state,\n        userDetails: {\n          ...action.payload.user\n        },\n        isLoggedIn: true\n      }\n\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isLoggedIn: false\n      }\n    case GET_TASK_BY_ID:\n      const task = state.tasks.find(task => task.id == action.payload)\n      return {\n        ...state,\n        taskData: task,\n        taskLoading: false\n      }\n    case GET_TASKS:\n      return {\n        ...state,\n        tasks: action.payload,\n        tasksLoading: false\n      }\n\n    case GET_USER_TASKS:\n      return {\n        ...state,\n        tasks: action.payload\n      }\n \n    case UPDATE_USER:\n      return {\n        ...state,\n        userDetails: { ...state.userDetails, ...action.payload }\n      }\n\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [action.payload, ...state.tasks]\n      }\n    case EDIT_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map(task => {\n          if (task.id === action.payload.id) {\n            return action.payload.task\n          }\n          return task\n        })\n      }\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => {\n          return task.id !== action.payload\n        })\n      }\n\n    case GET_FILTER_TASKS:\n      return {\n        ...state,\n        tasks: action.payload\n      }\n    case SORT_TASKS:\n      let sortedTask = [...state.tasks]\n      if (action.payload === 'Like') {\n        sortedTask.sort((a, b) => {\n          return b.likes.length - a.likes.length\n        })\n      } else if (action.payload === 'Comment') {\n        sortedTask.sort((a, b) => {\n          return b.comment.length - a.comment.length\n        })\n      } else if (action.payload === 'Views') {\n        sortedTask.sort((a, b) => {\n          return b.views - a.views\n        })\n      }\n      return {\n        ...state,\n        tasks: sortedTask\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","import { createStore, applyMiddleware } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst store = createStore(\n    userReducer,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\nconst setAuthToken = (token) => {\n    if (token) {\n      \n        axios.defaults.headers.common[\"Authorization\"] =`Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","import axios from 'axios'\nimport setAuthenticationToken from './setAuth'\n\nimport {\n  GET_USER_BY_ID,\n  LOGIN_USER,\n  LOGOUT_USER,\n  SET_CURRENT_USER,\n  GET_TASK_BY_ID,\n  UPDATE_USER,\n  GET_LIST,\n  GET_FILTER_TASKS,\n  ADD_TASK,\n  DELETE_TASK,\n  EDIT_TASK,\n  GET_TASKS,\n  POP_UP_MESSAGE,\n} from './types'\n\nexport const signupUser = (email, password, name) => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: 'http://localhost:3000/v1/auth/register',\n      method: 'POST',\n      data: {\n        email: email,\n        password: password,\n        name: name\n      },\n\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        // dispatch({\n        //   // type: SIGNUP_USER,\n        //   isLoggedIn: true\n        // })\n        // localStorage.setItem('token', res.data.token)\n        // setAuthenticationToken(res.data.token);\n        // dispatch(\n        //   setCurrentUser({\n        //     user: res.data.user\n        //     // token: jwt.decode(res.data.token),\n        //   })\n        // )\n        if (res.data.status.code === 200) {\n          dispatch({\n            type: LOGIN_USER,\n            isLoggedIn: true\n          })\n        }\n        window.location.href = '/'\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n}\n\nexport const loginUser = (username, password) => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: 'http://localhost:3000/v1/auth/login',\n      method: 'POST',\n      data: {\n        email: username,\n        password: password\n      },\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        const token = res.data.tokens.access.token;\n        localStorage.setItem('token', token)\n        setAuthenticationToken(token)\n        console.log(res.data.user,token)\n        if (res.data.user) {\n          dispatch(getUserById(res.data.user.id))\n          dispatch({\n            type: LOGIN_USER,\n            isLoggedIn: true\n          })\n        }\n      })\n      .catch(err => {\n        // dispatch(showMessage(\"warning\", \"Invalid credentials\", 900));\n        // dispatch({\n        //     type: LOGIN_USER_ERROR,\n        //     payload: \"Invalid credentials\",\n        //     isLoggedIn: false,\n        // });\n        console.log(err)\n      })\n  }\n}\n\nexport const setCurrentUser = user => {\n  return function (dispatch) {\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: user\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return function (dispatch) {\n    localStorage.removeItem('token')\n    dispatch(setCurrentUser({ user: {}, token: {} }))\n    dispatch({\n      type: LOGOUT_USER\n    })\n    window.location.href = '/'\n  }\n}\n\nexport const getTaskById = id => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: `http://localhost:3000/v1/task/${id}`,\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        // dispatch({\n        //   type: GET_TASK_BY_ID,\n        //   payload: res.data.post\n        // })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    dispatch({\n      type: GET_TASK_BY_ID,\n      payload: id\n    })\n  }\n}\n\nexport const addTask = task => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: 'http://localhost:3000/v1/task',\n      method: 'POST',\n      data: task,\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        dispatch({\n          type: ADD_TASK,\n          payload: res.data\n        })\n        dispatch({\n          type:POP_UP_MESSAGE,\n          payload:\"Task Added!!\"\n        })\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch({\n          type:POP_UP_MESSAGE,\n          payload:err.response.data.message\n        })\n      })\n  }\n}\n\nexport const updateUser = (id,data) => {\n  return function (dispatch) {\n    var OPTIONS = {\n        url: \"http://localhost:3000/v1/users/\" + id,\n        method: \"PATCH\",\n        headers: {\n            \"content-type\": \"application/json\",\n        },\n        data:data\n    };\n\n    axios(OPTIONS)\n        .then((res) => {\n          dispatch({\n            type: UPDATE_USER,\n            payload: res.data\n          })\n          dispatch({\n            type:POP_UP_MESSAGE,\n            payload:\"Profile Updated!!\"\n          })\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    \n  }\n}\n\nexport const getTasks = () => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: 'http://localhost:3000/v1/task',\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        dispatch({\n          type: GET_TASKS,\n          payload: res.data.results\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n}\n\nexport const getList = id => {\n  return function (dispatch) {\n    dispatch({\n      type: GET_LIST,\n      payload: id\n    })\n  }\n}\nexport const editTask = (id, task) => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: 'http://localhost:3000/v1/task/'+id,\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: task\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        dispatch({\n          type: EDIT_TASK,\n          payload: { id, task:res.data }\n        })\n        dispatch({\n          type:POP_UP_MESSAGE,\n          payload:\"Task Updated!!\"\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    \n  }\n}\nexport const getFilterTasks = (searchText, filter) => {\n  let url = ''\n  let data = {}\n\n  if (filter === 'Topic') {\n    url = 'http://localhost:3000/post/search/topic'\n    data = { topic: searchText }\n  } else if (filter === 'Title') {\n    url = 'http://localhost:3000/post/search/title'\n    data = { title: searchText }\n  } else if (filter === 'Author') {\n    url = 'http://localhost:3000/post/search/author'\n    data = { name: searchText }\n  }\n\n  return function (dispatch) {\n    var OPTIONS = {\n      url: url,\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: data\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        dispatch({\n          type: GET_FILTER_TASKS,\n          payload: res.data.posts\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n}\nexport const getUserById = id => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: 'http://localhost:3000/v1/users/' + id,\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        dispatch({\n          type: GET_USER_BY_ID,\n          payload: res.data\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n}\n\nexport const deleteTask = id => {\n  return function (dispatch) {\n    var OPTIONS = {\n      url: 'http://localhost:3000/v1/task/'+id,\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    }\n\n    axios(OPTIONS)\n      .then(res => {\n        dispatch({\n          type: DELETE_TASK,\n          payload: id\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n}\n\nexport const moveTask = (taskId, newStatus) => ({\n  type: 'MOVE_TASK',\n  payload: { taskId, newStatus },\n});\n\nexport const setPopMessage = (message) => {\n  return function (dispatch) {\n    dispatch({\n      type: POP_UP_MESSAGE,\n      payload: message\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useNavigate ,Link} from 'react-router-dom'\nimport { loginUser } from '../../Redux/useraction'\nimport './LoginPage.css'\nimport { useGoogleOneTapLogin } from '@react-oauth/google';\nimport { GoogleLogin } from '@react-oauth/google';\n\nfunction LoginPage (props) {\n  const navigate = useNavigate()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const handleLogin = () => {\n    if (username && password) {\n      // alert('Login Successful');\n      console.log(props)\n      localStorage.setItem('isLoggedIn', true)\n      localStorage.setItem('username', username)\n\n      props.loginUser(username, password)\n      navigate('/')\n    } else {\n      alert('Invalid Credentials')\n    }\n  }\n\nuseGoogleOneTapLogin({\n  onSuccess: credentialResponse => {\n    console.log(credentialResponse);\n  },\n  onError: () => {\n    console.log('Login Failed');\n  },\n});\n  return (\n    <div>\n      <GoogleLogin\n  onSuccess={credentialResponse => {\n    console.log(credentialResponse);\n  }}\n  onError={() => {\n    console.log('Login Failed');\n  }}\n  useOneTap\n/>\n      <div class='container'>\n        <div class='login-body'>\n          <div class='row align-items-center justify-content-center'>\n            <div class='col-md-5'>\n              <div class='login-img'>\n                <img src='imgs/login.jpg' alt='' class='img-fluid' />\n              </div>\n            </div>\n            <div class='col-md-12'>\n              <div class='login-form'>\n                <h3>SIGN IN</h3>\n                <form action=''>\n                  <div class='mail-input'>\n                    <div class='input-group flex-nowrap'>\n                      <span class='input-group-text' id='addon-wrapping'>\n                        <i class='fa-solid fa-envelope'></i>\n                      </span>\n                      <input\n                        id='signInEmail'\n                        type='text'\n                        class='form-control'\n                        placeholder='Username'\n                        value={username}\n                        onChange={e => setUsername(e.target.value)}\n                        aria-label='Username'\n                        aria-describedby='addon-wrapping'\n                      />\n                    </div>\n                  </div>\n                  <div class='password-input'>\n                    <div class='input-group flex-nowrap'>\n                      <span class='input-group-text' id='addon-wrapping'>\n                        <i class='fa-solid fa-lock'></i>\n                      </span>\n                      <input\n                        id='signInPassword'\n                        type='password'\n                        placeholder='Password'\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        class='form-control'\n                        aria-label='Username'\n                        aria-describedby='addon-wrapping'\n                      />\n                    </div>\n                  </div>\n                  <p id='loginError' class='alert text-danger d-none'>\n                    Your email or password is wrong or cant be empty\n                  </p>\n                  <a id='signInBtn' class='submit d-block m-auto mb-5 ' onClick={handleLogin}>\n                    Login\n                  </a>\n                </form>\n                <Link to='/signup'>Do not have an account ? Sign Up</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (username, password) => dispatch(loginUser(username, password))\n  }\n}\nexport default connect(null, mapDispatchToProps)(LoginPage)\n","import React, { useState } from 'react'\nimport { signupUser } from '../Redux/useraction'\nimport { connect } from 'react-redux'\nconst SignUp = (props) => {\n  const [formData, setFormData] = useState({})\n  const handleSubmit = () => {\n    console.log(formData)\n    props.signupUser(formData.email, formData.password,formData.name)\n  }\n  const onChange = e => {\n    // console.log(e.target.value)\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n  return (\n    <div>\n      <div class='container'>\n        <div class='login-body'>\n          <div class='row align-items-center justify-content-center'>\n            <div class='col-md-5'>\n              <div class='login-img'>\n                <img src='imgs/login.jpg' alt='' class='img-fluid' />\n              </div>\n            </div>\n            <div class='col-md-12'>\n              <div class='login-form'>\n                <h3>SIGN UP</h3>\n                <form action=''>\n                  <div class='mail-input'>\n                    <div class='input-group flex-nowrap'>\n                      <span class='input-group-text' id='addon-wrapping'>\n                        <i class='fa-solid fa-envelope'></i>\n                      </span>\n                      <input\n                        id='signInEmail'\n                        type='text'\n                        class='form-control'\n                        placeholder='Email'\n                        name='email'\n                        onChange={onChange}\n                        aria-label='Email'\n                        aria-describedby='addon-wrapping'\n                      />\n                    </div>\n                  </div>\n                  <div class='mail-input'>\n                    <div class='input-group flex-nowrap'>\n                      <span class='input-group-text' id='addon-wrapping'>\n                        <i class='fa-solid fa-envelope'></i>\n                      </span>\n                      <input\n                        id='signInEmail'\n                        type='text'\n                        class='form-control'\n                        placeholder='Name'\n                        name='name'\n                        onChange={onChange}\n                        aria-label='Name'\n                        aria-describedby='addon-wrapping'\n                      />\n                    </div>\n                  </div>\n                  <div class='password-input'>\n                    <div class='input-group flex-nowrap'>\n                      <span class='input-group-text' id='addon-wrapping'>\n                        <i class='fa-solid fa-lock'></i>\n                      </span>\n                      <input\n                        id='signInPassword'\n                        type='password'\n                        name='password'\n                        placeholder='Password'\n                        onChange={onChange}\n                        class='form-control'\n                        aria-label='Username'\n                        aria-describedby='addon-wrapping'\n                      />\n                    </div>\n                  </div>\n                  <p id='loginError' class='alert text-danger d-none'>\n                    Your email or password is wrong or cant be empty\n                  </p>\n                  <a\n                    id='signInBtn'\n                    class='submit d-block m-auto mb-5 '\n                    onClick={handleSubmit}\n                  >\n                    SignUp\n                  </a>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst dispatchStateToProps = dispatch => {\n  return {\n    signupUser: (email,password,name) => dispatch(signupUser(email,password,name))\n  }\n}\nexport default connect(null, dispatchStateToProps)(SignUp)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './Navbar.css'\nimport { Link } from 'react-router-dom';\nimport { logoutUser } from '../../Redux/useraction';\nconst Navbar = (props) => {\n  return (\n    <nav className=\"navbar\">\n  <div className=\"navbar-container\">\n    <div className=\"logo\">\n      <a href=\"#\">Taskly ✨</a>\n    </div>\n    <div>\n    <ul className=\"nav-links\">\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/my-profile\">My Profile</Link>\n      </li>\n      <li>\n        <Link to=\"/add-task\">Add Task</Link>\n      </li>\n      <li>\n        <img\n          className=\"navbar-profile\"\n          src={`http://localhost:3001/${props.userAvatar ? props.userAvatar : '1'}.png`}\n          alt=\"user-profile\"\n        />\n      </li>\n      <li>\n        <Link>{props.userName ? props.userName : 'Sign In'}</Link>\n      </li>\n      <li className=\"logout-btn\">\n        <Link onClick={() => props.logoutUser()}>Log Out</Link>\n      </li>\n    </ul>\n    </div>\n   \n  </div>\n</nav>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    userName: state.userDetails.name,\n    userAvatar: state.userDetails.avatar,\n    isLoggedIn: state.isLoggedIn\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './UserProfile.css';\nimport { updateUser } from '../../Redux/useraction';\n\nconst UserProfile = (props) => {\n  const [formData, setFormData] = useState({});\n  const [activeTab, setActiveTab] = useState(1);\n\n  useEffect(() => {\n    setFormData({\n      ...props.user,\n      avatar: props.user.avatar || 1, // Default avatar to 1 if not set\n    });\n  }, [props.user]);\n\n  const handleAvatarChange = (avatar) => {\n    setFormData({ ...formData, avatar });\n  };\n\n  const handleTabClick = (tabIndex) => {\n    setActiveTab(tabIndex);\n  };\n\n  return (\n    <div className=\"profile-wrapper\">\n      <h1>User Profile</h1>\n      <div className=\"tab-container\">\n        <div className=\"tab-header\">\n          <div\n            key={1}\n            className={`tab-item ${1 === activeTab ? 'active' : ''}`}\n            onClick={() => handleTabClick(1)}\n          >\n            Profile\n          </div>\n          <div\n            key={2}\n            className={`tab-item ${2 === activeTab ? 'active' : ''}`}\n            onClick={() => handleTabClick(2)}\n          >\n            My Task\n          </div>\n          <div\n            key={3}\n            className={`tab-item ${3 === activeTab ? 'active' : ''}`}\n            onClick={() => handleTabClick(3)}\n          >\n            Drafts\n          </div>\n        </div>\n      </div>\n      {activeTab === 1 && (\n        <div className=\"profile-tab\">\n          <img\n            src={`http://localhost:3001/${props.user.avatar}.png`}\n            alt=\"profile\"\n            className=\"author-avatar\"\n          />\n          <p>{props.user.name}</p>\n          <p>{props.user.email}</p>\n         \n          <div className=\"avatar-selector\">\n            <p>Select an Avatar:</p>\n            <div className=\"avatar-options\">\n              {[...Array(9)].map((_, index) => {\n                const avatarNumber = index + 1;\n                return (\n                  <img\n                    key={avatarNumber}\n                    src={`http://localhost:3001/${avatarNumber}.png`}\n                    alt={`avatar-${avatarNumber}`}\n                    className={`avatar-option ${\n                      formData.avatar === avatarNumber ? 'selected' : ''\n                    }`}\n                    onClick={() => handleAvatarChange(avatarNumber)}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <button\n            className=\"task-topic\"\n            onClick={() => props.updateUser(props.user.id,{avatar:formData.avatar})}\n          >\n            Update\n          </button>\n        </div>\n      )}\n      {activeTab === 2 && <div>Tasks content here...</div>}\n      {activeTab === 3 && <div>Drafts content here...</div>}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userDetails,\n  };\n};\n\nconst dispatchStateToProps = (dispatch) => {\n  return {\n    updateUser: (id,data) => dispatch(updateUser(id,data)),\n  };\n};\n\nexport default connect(mapStateToProps, dispatchStateToProps)(UserProfile);","import React from 'react'\nimport {useSelector} from \"react-redux\"\nimport {Navigate, useLocation} from \"react-router-dom\"\n\nconst ProtectedRoute = ({children}) => {\n    const user = useSelector((state) => state);\n    let location = useLocation();\n    // console.log(user)\n    if(!user.isLoggedIn) {\n        return <Navigate to=\"/login\" state={{ from: location}} replace />\n    }\n return children\n\n};\n\nexport default ProtectedRoute;","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport './AddTask.css'\nimport { addTask, getTaskById ,editTask} from '../../../Redux/useraction'\nimport { useParams } from 'react-router-dom'\n\nconst AddTask = props => {\n  const { id } = useParams();\n  const [modal, setModal] = useState(false);\n  const [taskData, setTaskData] = useState({});\n\n  const onChange = (e) => {\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  };\n\n  useEffect(() => {\n    if (id) {\n      props.getTaskById(id);\n    } else {\n      setTaskData({\n        title: '',\n        description: '',\n        user_id: props.user.id,\n        status: 'To Do', // Default column\n        dueDate: '',\n        priority: 'Medium',\n      });\n    }\n\n    if (!props.taskLoading && id) {\n      setTaskData(props.taskData);\n    }\n    return () => {\n      setTaskData({});\n    };\n  }, [props.taskLoading, id]);\n\n  const addTask = () => {\n    const newTask = {\n      title: taskData.title,\n      description: taskData.description,\n      status: taskData.status,\n      dueDate: taskData.dueDate,\n      priority: taskData.priority,\n    };\n    props.addTask(newTask);\n  };\n\n  const editTask = () => {\n    const updatedTask = {\n      title: taskData.title,\n      description: taskData.description,\n      status: taskData.status,\n      dueDate: taskData.dueDate,\n      priority: taskData.priority,\n      id: taskData.id,\n    };\n    props.editTask(id, updatedTask);\n  };\n\n\n  return (\n    <div className='add-task-container'>\n      <div className='add-task-form'>\n        <h1>Add Task</h1>\n        <input\n          type='text'\n          name='title'\n          placeholder='Task Title'\n          value={taskData.title}\n          onChange={onChange}\n        />\n        <input\n          type='text'\n          name='description'\n          placeholder='Task Description'\n          value={taskData.description}\n          onChange={onChange}\n        />\n        <select name='status' value={taskData.status} onChange={onChange}>\n          <option value='To Do'>To Do</option>\n          <option value='In Progress'>In Progress</option>\n          <option value='Done'>Done</option>\n        </select>\n        <input\n          type='date'\n          name='dueDate'\n          placeholder='Due Date'\n          value={taskData.dueDate}\n          onChange={onChange}\n        />\n        <select name='priority' value={taskData.priority} onChange={onChange}>\n          <option value='Low'>Low</option>\n          <option value='Medium'>Medium</option>\n          <option value='High'>High</option>\n        </select>\n        <div\n          className='modal'\n          style={{ display: modal ? 'block' : 'none' }}\n        >\n        </div>\n        {id ? (\n          <div>\n            <button className='btn-primary' onClick={() => editTask()}>\n              Edit Task\n            </button>\n          </div>\n        ) : (\n          <button className='btn-primary' onClick={() => addTask()}>\n            Add Task\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n    user: state.userDetails,\n    taskLoading: state.taskLoading,\n    taskData: state.taskData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTask: (task) => dispatch(addTask(task)),\n    getTaskById: (id) => dispatch(getTaskById(id)),\n    editTask: (id, task) => dispatch(editTask(id, task)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask)\n","import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport \"./TaskCard.css\";\nimport { Link } from 'react-router-dom';\nimport { deleteTask } from '../../../Redux/useraction';\nconst { connect } = require('react-redux')\n\nconst TaskCard = (props) => {\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: 'TASK',\n    item: { id: props.task.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }));\n\n  const deleteTask = (id)=>{\n    props.deleteTask(id);\n  }\n\n  return (\n    <div\n      ref={drag}\n      className=\"task-card\"\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n      }}\n    >\n      <h3 className=\"task-card-title\">{props.task.title}</h3>\n      <p className=\"task-card-description\">{props.task.description}</p>\n      <p className=\"task-card-created\">Due Date: {props.task.dueDate.split('T')[0]}</p>\n      <p className=\"task-card-created\">Created At: {props.task.createdAt}</p>\n      <div className=\"task-card-actions\">\n        <button className=\"task-card-btn\" onClick={()=>deleteTask(props.task.id)}>Delete</button>\n        <button className=\"task-card-btn\"> <Link to={`/edit-task/` + props.task.id}>Edit</Link></button>\n       \n        <button className=\"task-card-btn\">View Details</button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userDetails,\n  }\n}\nconst dispatchToProps = dispatch => {\n  return {\n    deleteTask: id => dispatch(deleteTask(id))\n  }\n}\n\nexport default connect(mapStateToProps, dispatchToProps)(TaskCard);","import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport TaskCard from '../TaskCard/TaskCard';\nimport './TaskColumn.css';\n\nconst TaskColumn = ({ status, tasks, moveTask }) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: 'TASK',\n    drop: (item) => moveTask(item.id, status),\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      className={`task-column ${isOver ? 'is-over' : ''}`}\n    >\n      <h2 className=\"task-column-title\">{status.toUpperCase()}</h2>\n      <div className=\"task-column-content\">\n        {tasks.map((task) => (\n          <TaskCard key={task.id} task={task} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskColumn;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getTasks, editTask } from '../../../Redux/useraction';\nimport './TaskBoard.css';\nimport TaskColumn from '../TaskColumn/TaskColumn';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst TaskList = (props) => {\n  useEffect(() => {\n    props.getTasks();\n  }, []);\n\n  const moveTask = (taskId, newStatus) => {\n    props.editTask(taskId, { status: newStatus });\n  };\n\n  return (\n    <div className=\"task-board-container\">\n      {/* Task Board */}\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"task-board\">\n          {['To Do', 'In Progress', 'Done'].map((status) => (\n            <TaskColumn\n              key={status}\n              status={status}\n              tasks={props.tasks.filter((task) => task.status === status)}\n              moveTask={moveTask}\n            />\n          ))}\n        </div>\n      </DndProvider>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTasks: () => dispatch(getTasks()),\n  editTask: (id, task) => dispatch(editTask(id, task)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","import LoginPage from './LoginPage/LoginPage'\nimport jwt from 'jsonwebtoken'\nimport { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  useNavigate,\n} from 'react-router-dom'\nimport SignUp from './SignUp'\nimport Navbar from './Navbar/Navbar'\nimport UserProfile from './UserProfile/UserProfile'\nimport ProtectedRoute from './ProtectedRoute'\nimport { getUserById, setPopMessage } from '../Redux/useraction'\nimport setAuthToken from '../Redux/setAuth'\nimport AddTask from './Task/AddTask/AddTask'\nimport TaskList from './Task/TaskList/TaskList'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction MainPage (props) {\n  useEffect(()=>{\n    if(props.popMessage){\n      toast(props.popMessage);\n      props.setPopMessage('');\n    }\n  },[props.popMessage]);\n\n  const navigate = useNavigate()\n  useEffect(() => {\n    function fetchData() {\n      const token = localStorage.getItem('token');\n      if(token){\n        console.log(jwt.decode(token, 'thisisasamplesecret'));\n        props.getUserById(jwt.decode(token, 'thisisasamplesecret').sub);\n        setAuthToken(token);\n      }\n      \n    }\n    fetchData();\n \n    if (props.isLoggedIn) {\n      navigate('/')\n    } else {\n      navigate('/login')\n    }\n  \n  }, [props.isLoggedIn])\n  return (\n    <div className='App'>\n        <ToastContainer />\n      <Navbar />\n      {/* <Payment /> */}\n      <Routes>\n        <Route path='/signup' element={<SignUp />}></Route>\n        <Route path='/login' element={<LoginPage />}></Route>\n        <Route\n          path='/'\n          element={\n            <ProtectedRoute>\n              <TaskList />\n            </ProtectedRoute>\n          }\n        />\n     \n        <Route\n          path='/add-task'\n          element={\n            <ProtectedRoute>\n              <AddTask />\n            </ProtectedRoute>\n          }\n        />\n          <Route\n          path='/edit-task/:id'\n          element={\n            <ProtectedRoute>\n              <AddTask />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path='/my-profile'\n          element={\n            <ProtectedRoute>\n              <UserProfile />\n            </ProtectedRoute>\n          }\n        />\n      </Routes>\n    </div>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    user: state.userDetails,\n    popMessage: state.popMessage\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserById: id => dispatch(getUserById(id)),\n    setPopMessage: message => dispatch(setPopMessage(message))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)\n","import './App.css'\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\nimport { BrowserRouter} from 'react-router-dom';\nimport MainPage from './Components/MainPage';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\n\nfunction App () {\n\n  return (\n    <Provider store={store}>\n     \n    <BrowserRouter>\n    <div className='App'>\n    <GoogleOAuthProvider clientId=\"<your_client_id>\"> <MainPage/></GoogleOAuthProvider>;\n\n    \n    </div>\n    </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}